{
  "suite_name": "Assertion Reporting Example",
  "start_time": "2025-08-01T11:09:54.283580522+01:00",
  "end_time": "2025-08-01T11:09:54.283718604+01:00",
  "total_tests": 1,
  "passed_tests": 0,
  "failed_tests": 1,
  "skipped_tests": 0,
  "error_tests": 0,
  "test_cases": [
    {
      "name": "API Integration Test with Assertions",
      "status": 1,
      "duration": 138082,
      "logs": [
        "[11:09:54.283] Starting example test execution",
        "[11:09:54.283] Testing API response validation",
        "[11:09:54.283] ✓ Equal: API should return success status",
        "[11:09:54.283] ✓ NotNil: API response should contain data",
        "[11:09:54.283] ✓ Contains: Message should indicate completion",
        "[11:09:54.283] ✓ Len: Should return exactly 3 items",
        "[11:09:54.283] Validating user data structure",
        "[11:09:54.283] ✓ NotEmpty: User name should not be empty",
        "[11:09:54.283] ✓ True: User ID should be positive",
        "[11:09:54.283] ✓ Contains: Email should contain @ symbol",
        "[11:09:54.283] Performing database validation",
        "[11:09:54.283] ✓ True: Database connection should be established",
        "[11:09:54.283] ✓ True: Should have records in database",
        "[11:09:54.283] ✓ Equal: Should have exactly 5 records",
        "[11:09:54.283] Testing error handling",
        "[11:09:54.283] ✗ Equal: This assertion will fail for demonstration - Expected: expected_value, Actual: actual_value",
        "[11:09:54.283] Test execution completed"
      ],
      "start_time": "2025-08-01T11:09:54.283580522+01:00",
      "end_time": "2025-08-01T11:09:54.283718604+01:00",
      "steps": [
        {
          "name": "Equal",
          "description": "API should return success status",
          "status": 0,
          "duration": 2224,
          "start_time": "2025-08-01T11:09:54.283604688+01:00",
          "end_time": "2025-08-01T11:09:54.283606922+01:00",
          "expected": "success",
          "actual": "success"
        },
        {
          "name": "NotNil",
          "description": "API response should contain data",
          "status": 0,
          "duration": 170,
          "start_time": "2025-08-01T11:09:54.283614677+01:00",
          "end_time": "2025-08-01T11:09:54.283614857+01:00",
          "expected": "not nil",
          "actual": {
            "email": "john.doe@example.com",
            "name": "John Doe",
            "user_id": 12345
          }
        },
        {
          "name": "Contains",
          "description": "Message should indicate completion",
          "status": 0,
          "duration": 591,
          "start_time": "2025-08-01T11:09:54.283615649+01:00",
          "end_time": "2025-08-01T11:09:54.28361624+01:00",
          "expected": "string containing 'completed'",
          "actual": "Operation completed successfully"
        },
        {
          "name": "Len",
          "description": "Should return exactly 3 items",
          "status": 0,
          "duration": 381,
          "start_time": "2025-08-01T11:09:54.283616971+01:00",
          "end_time": "2025-08-01T11:09:54.283617362+01:00",
          "expected": 3,
          "actual": 3
        },
        {
          "name": "NotEmpty",
          "description": "User name should not be empty",
          "status": 0,
          "duration": 582,
          "start_time": "2025-08-01T11:09:54.283618223+01:00",
          "end_time": "2025-08-01T11:09:54.283618795+01:00",
          "expected": "not empty",
          "actual": "John Doe"
        },
        {
          "name": "True",
          "description": "User ID should be positive",
          "status": 0,
          "duration": 50,
          "start_time": "2025-08-01T11:09:54.283621279+01:00",
          "end_time": "2025-08-01T11:09:54.283621329+01:00",
          "expected": true,
          "actual": true
        },
        {
          "name": "Contains",
          "description": "Email should contain @ symbol",
          "status": 0,
          "duration": 441,
          "start_time": "2025-08-01T11:09:54.283625888+01:00",
          "end_time": "2025-08-01T11:09:54.283626339+01:00",
          "expected": "string containing '@'",
          "actual": "john.doe@example.com"
        },
        {
          "name": "True",
          "description": "Database connection should be established",
          "status": 0,
          "duration": 30,
          "start_time": "2025-08-01T11:09:54.2836269+01:00",
          "end_time": "2025-08-01T11:09:54.28362694+01:00",
          "expected": true,
          "actual": true
        },
        {
          "name": "True",
          "description": "Should have records in database",
          "status": 0,
          "duration": 40,
          "start_time": "2025-08-01T11:09:54.283627451+01:00",
          "end_time": "2025-08-01T11:09:54.283627481+01:00",
          "expected": true,
          "actual": true
        },
        {
          "name": "Equal",
          "description": "Should have exactly 5 records",
          "status": 0,
          "duration": 511,
          "start_time": "2025-08-01T11:09:54.283636578+01:00",
          "end_time": "2025-08-01T11:09:54.283637099+01:00",
          "expected": 5,
          "actual": 5
        },
        {
          "name": "Equal",
          "description": "This assertion will fail for demonstration",
          "status": 1,
          "error": {},
          "duration": 79511,
          "start_time": "2025-08-01T11:09:54.283638031+01:00",
          "end_time": "2025-08-01T11:09:54.283717532+01:00",
          "expected": "expected_value",
          "actual": "actual_value"
        }
      ],
      "error": "test failed with 1 assertion failures"
    }
  ]
}