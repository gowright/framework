{
  "suite_name": "Comprehensive API Test Suite",
  "start_time": "2025-08-01T11:11:36.635028398+01:00",
  "end_time": "2025-08-01T11:11:36.680595682+01:00",
  "total_tests": 5,
  "passed_tests": 4,
  "failed_tests": 1,
  "skipped_tests": 0,
  "error_tests": 0,
  "test_cases": [
    {
      "name": "User Authentication Test",
      "status": 0,
      "duration": 57660,
      "logs": [
        "[11:11:36.635] Starting user authentication test",
        "[11:11:36.635] Validating login response",
        "[11:11:36.635] ✓ True: Login should be successful",
        "[11:11:36.635] ✓ NotNil: Token should be present",
        "[11:11:36.635] ✓ NotEmpty: Token should not be empty",
        "[11:11:36.635] ✓ True: User ID should be positive",
        "[11:11:36.635] ✓ Contains: Email should be valid",
        "[11:11:36.635] ✓ Equal: User should have admin role",
        "[11:11:36.635] ✓ True: Token should have expiration time",
        "[11:11:36.635] User authentication test completed successfully"
      ],
      "start_time": "2025-08-01T11:11:36.635028649+01:00",
      "end_time": "2025-08-01T11:11:36.635086308+01:00",
      "steps": [
        {
          "name": "True",
          "description": "Login should be successful",
          "status": 0,
          "duration": 201,
          "start_time": "2025-08-01T11:11:36.635056121+01:00",
          "end_time": "2025-08-01T11:11:36.635056322+01:00",
          "expected": true,
          "actual": true
        },
        {
          "name": "NotNil",
          "description": "Token should be present",
          "status": 0,
          "duration": 190,
          "start_time": "2025-08-01T11:11:36.635062173+01:00",
          "end_time": "2025-08-01T11:11:36.635062353+01:00",
          "expected": "not nil",
          "actual": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        },
        {
          "name": "NotEmpty",
          "description": "Token should not be empty",
          "status": 0,
          "duration": 1343,
          "start_time": "2025-08-01T11:11:36.635063445+01:00",
          "end_time": "2025-08-01T11:11:36.635064788+01:00",
          "expected": "not empty",
          "actual": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        },
        {
          "name": "True",
          "description": "User ID should be positive",
          "status": 0,
          "duration": 50,
          "start_time": "2025-08-01T11:11:36.635065519+01:00",
          "end_time": "2025-08-01T11:11:36.635065569+01:00",
          "expected": true,
          "actual": true
        },
        {
          "name": "Contains",
          "description": "Email should be valid",
          "status": 0,
          "duration": 7253,
          "start_time": "2025-08-01T11:11:36.635066411+01:00",
          "end_time": "2025-08-01T11:11:36.635073654+01:00",
          "expected": "string containing '@'",
          "actual": "user@example.com"
        },
        {
          "name": "Equal",
          "description": "User should have admin role",
          "status": 0,
          "duration": 731,
          "start_time": "2025-08-01T11:11:36.635077021+01:00",
          "end_time": "2025-08-01T11:11:36.635077762+01:00",
          "expected": "admin",
          "actual": "admin"
        },
        {
          "name": "True",
          "description": "Token should have expiration time",
          "status": 0,
          "duration": 50,
          "start_time": "2025-08-01T11:11:36.635080678+01:00",
          "end_time": "2025-08-01T11:11:36.635080728+01:00",
          "expected": true,
          "actual": true
        }
      ]
    },
    {
      "name": "Data Validation Test",
      "status": 0,
      "duration": 15780,
      "logs": [
        "[11:11:36.635] Starting data validation test",
        "[11:11:36.635] Validating API data structure",
        "[11:11:36.635] ✓ NotNil: Users array should be present",
        "[11:11:36.635] ✓ Len: Should have exactly 3 users",
        "[11:11:36.635] ✓ Equal: Total count should match users array length",
        "[11:11:36.635] ✓ Equal: Should be on page 1",
        "[11:11:36.635] Validating individual user records",
        "[11:11:36.635] Validating user 1",
        "[11:11:36.635] ✓ True: User 1 should have positive ID",
        "[11:11:36.635] ✓ NotEmpty: User 1 should have name",
        "[11:11:36.635] ✓ NotNil: User 1 should have active status",
        "[11:11:36.635] Validating user 2",
        "[11:11:36.635] ✓ True: User 2 should have positive ID",
        "[11:11:36.635] ✓ NotEmpty: User 2 should have name",
        "[11:11:36.635] ✓ NotNil: User 2 should have active status",
        "[11:11:36.635] Validating user 3",
        "[11:11:36.635] ✓ True: User 3 should have positive ID",
        "[11:11:36.635] ✓ NotEmpty: User 3 should have name",
        "[11:11:36.635] ✓ NotNil: User 3 should have active status",
        "[11:11:36.635] Data validation test completed successfully"
      ],
      "start_time": "2025-08-01T11:11:36.635086669+01:00",
      "end_time": "2025-08-01T11:11:36.635102449+01:00",
      "steps": [
        {
          "name": "NotNil",
          "description": "Users array should be present",
          "status": 0,
          "duration": 111,
          "start_time": "2025-08-01T11:11:36.635088402+01:00",
          "end_time": "2025-08-01T11:11:36.635088503+01:00",
          "expected": "not nil",
          "actual": [
            {
              "active": true,
              "id": 1,
              "name": "Alice"
            },
            {
              "active": false,
              "id": 2,
              "name": "Bob"
            },
            {
              "active": true,
              "id": 3,
              "name": "Charlie"
            }
          ]
        },
        {
          "name": "Len",
          "description": "Should have exactly 3 users",
          "status": 0,
          "duration": 251,
          "start_time": "2025-08-01T11:11:36.635089354+01:00",
          "end_time": "2025-08-01T11:11:36.635089615+01:00",
          "expected": 3,
          "actual": 3
        },
        {
          "name": "Equal",
          "description": "Total count should match users array length",
          "status": 0,
          "duration": 220,
          "start_time": "2025-08-01T11:11:36.635090116+01:00",
          "end_time": "2025-08-01T11:11:36.635090346+01:00",
          "expected": 3,
          "actual": 3
        },
        {
          "name": "Equal",
          "description": "Should be on page 1",
          "status": 0,
          "duration": 80,
          "start_time": "2025-08-01T11:11:36.635091047+01:00",
          "end_time": "2025-08-01T11:11:36.635091128+01:00",
          "expected": 1,
          "actual": 1
        },
        {
          "name": "True",
          "description": "User 1 should have positive ID",
          "status": 0,
          "duration": 40,
          "start_time": "2025-08-01T11:11:36.635093001+01:00",
          "end_time": "2025-08-01T11:11:36.635093051+01:00",
          "expected": true,
          "actual": true
        },
        {
          "name": "NotEmpty",
          "description": "User 1 should have name",
          "status": 0,
          "duration": 130,
          "start_time": "2025-08-01T11:11:36.635093873+01:00",
          "end_time": "2025-08-01T11:11:36.635094003+01:00",
          "expected": "not empty",
          "actual": "Alice"
        },
        {
          "name": "NotNil",
          "description": "User 1 should have active status",
          "status": 0,
          "duration": 60,
          "start_time": "2025-08-01T11:11:36.635094604+01:00",
          "end_time": "2025-08-01T11:11:36.635094674+01:00",
          "expected": "not nil",
          "actual": true
        },
        {
          "name": "True",
          "description": "User 2 should have positive ID",
          "status": 0,
          "duration": 50,
          "start_time": "2025-08-01T11:11:36.635095436+01:00",
          "end_time": "2025-08-01T11:11:36.635095536+01:00",
          "expected": true,
          "actual": true
        },
        {
          "name": "NotEmpty",
          "description": "User 2 should have name",
          "status": 0,
          "duration": 80,
          "start_time": "2025-08-01T11:11:36.635096027+01:00",
          "end_time": "2025-08-01T11:11:36.635096107+01:00",
          "expected": "not empty",
          "actual": "Bob"
        },
        {
          "name": "NotNil",
          "description": "User 2 should have active status",
          "status": 0,
          "duration": 50,
          "start_time": "2025-08-01T11:11:36.635099544+01:00",
          "end_time": "2025-08-01T11:11:36.635099594+01:00",
          "expected": "not nil",
          "actual": false
        },
        {
          "name": "True",
          "description": "User 3 should have positive ID",
          "status": 0,
          "duration": 40,
          "start_time": "2025-08-01T11:11:36.635100425+01:00",
          "end_time": "2025-08-01T11:11:36.635100475+01:00",
          "expected": true,
          "actual": true
        },
        {
          "name": "NotEmpty",
          "description": "User 3 should have name",
          "status": 0,
          "duration": 80,
          "start_time": "2025-08-01T11:11:36.635101227+01:00",
          "end_time": "2025-08-01T11:11:36.635101307+01:00",
          "expected": "not empty",
          "actual": "Charlie"
        },
        {
          "name": "NotNil",
          "description": "User 3 should have active status",
          "status": 0,
          "duration": 50,
          "start_time": "2025-08-01T11:11:36.635101778+01:00",
          "end_time": "2025-08-01T11:11:36.635101828+01:00",
          "expected": "not nil",
          "actual": true
        }
      ]
    },
    {
      "name": "Error Handling Test",
      "status": 1,
      "duration": 129567,
      "logs": [
        "[11:11:36.635] Starting error handling test",
        "[11:11:36.635] Validating error response structure",
        "[11:11:36.635] ✓ False: Response should indicate failure",
        "[11:11:36.635] ✓ NotNil: Error object should be present",
        "[11:11:36.635] ✓ Equal: Error code should be 400",
        "[11:11:36.635] ✓ Equal: Error message should be 'Bad Request'",
        "[11:11:36.635] ✓ Contains: Error details should mention email",
        "[11:11:36.635] ✗ Equal: This assertion will fail to demonstrate error reporting - Expected: success, Actual: failure",
        "[11:11:36.635] Error handling test completed"
      ],
      "start_time": "2025-08-01T11:11:36.635107338+01:00",
      "end_time": "2025-08-01T11:11:36.635236904+01:00",
      "steps": [
        {
          "name": "False",
          "description": "Response should indicate failure",
          "status": 0,
          "duration": 60,
          "start_time": "2025-08-01T11:11:36.635108641+01:00",
          "end_time": "2025-08-01T11:11:36.635108711+01:00",
          "expected": false,
          "actual": false
        },
        {
          "name": "NotNil",
          "description": "Error object should be present",
          "status": 0,
          "duration": 411,
          "start_time": "2025-08-01T11:11:36.635109262+01:00",
          "end_time": "2025-08-01T11:11:36.635109673+01:00",
          "expected": "not nil",
          "actual": {
            "code": 400,
            "details": "Invalid parameter 'email'",
            "message": "Bad Request"
          }
        },
        {
          "name": "Equal",
          "description": "Error code should be 400",
          "status": 0,
          "duration": 140,
          "start_time": "2025-08-01T11:11:36.635110194+01:00",
          "end_time": "2025-08-01T11:11:36.635110334+01:00",
          "expected": 400,
          "actual": 400
        },
        {
          "name": "Equal",
          "description": "Error message should be 'Bad Request'",
          "status": 0,
          "duration": 110,
          "start_time": "2025-08-01T11:11:36.635110885+01:00",
          "end_time": "2025-08-01T11:11:36.635110995+01:00",
          "expected": "Bad Request",
          "actual": "Bad Request"
        },
        {
          "name": "Contains",
          "description": "Error details should mention email",
          "status": 0,
          "duration": 180,
          "start_time": "2025-08-01T11:11:36.635111687+01:00",
          "end_time": "2025-08-01T11:11:36.635111867+01:00",
          "expected": "string containing 'email'",
          "actual": "Invalid parameter 'email'"
        },
        {
          "name": "Equal",
          "description": "This assertion will fail to demonstrate error reporting",
          "status": 1,
          "error": {},
          "duration": 122904,
          "start_time": "2025-08-01T11:11:36.635112428+01:00",
          "end_time": "2025-08-01T11:11:36.635235332+01:00",
          "expected": "success",
          "actual": "failure"
        }
      ],
      "error": "test failed with 1 assertion failures"
    },
    {
      "name": "Performance Validation Test",
      "status": 0,
      "duration": 45288934,
      "logs": [
        "[11:11:36.635] Starting performance validation test",
        "[11:11:36.680] Validating performance metrics",
        "[11:11:36.680] ✓ True: Response time should be under 1 second",
        "[11:11:36.680] ✓ True: Memory usage should be under 200MB",
        "[11:11:36.680] ✓ True: CPU usage should be under 80%",
        "[11:11:36.680] Performance metrics - Response: 45ms, Memory: 68MB, CPU: 12%",
        "[11:11:36.680] Performance validation test completed successfully"
      ],
      "start_time": "2025-08-01T11:11:36.635237436+01:00",
      "end_time": "2025-08-01T11:11:36.68052637+01:00",
      "steps": [
        {
          "name": "True",
          "description": "Response time should be under 1 second",
          "status": 0,
          "duration": 711,
          "start_time": "2025-08-01T11:11:36.680492927+01:00",
          "end_time": "2025-08-01T11:11:36.680493638+01:00",
          "expected": true,
          "actual": true
        },
        {
          "name": "True",
          "description": "Memory usage should be under 200MB",
          "status": 0,
          "duration": 30,
          "start_time": "2025-08-01T11:11:36.680507685+01:00",
          "end_time": "2025-08-01T11:11:36.680507725+01:00",
          "expected": true,
          "actual": true
        },
        {
          "name": "True",
          "description": "CPU usage should be under 80%",
          "status": 0,
          "duration": 30,
          "start_time": "2025-08-01T11:11:36.680515239+01:00",
          "end_time": "2025-08-01T11:11:36.680515269+01:00",
          "expected": true,
          "actual": true
        }
      ]
    },
    {
      "name": "Integration Test",
      "status": 0,
      "duration": 42150,
      "logs": [
        "[11:11:36.680] Starting integration test",
        "[11:11:36.680] Step 1: Database connection",
        "[11:11:36.680] ✓ True: Database should be connected",
        "[11:11:36.680] Step 2: Cache validation",
        "[11:11:36.680] ✓ True: Cache hit rate should be above 80%",
        "[11:11:36.680] Step 3: External service check",
        "[11:11:36.680] ✓ Len: Should have 3 external services",
        "[11:11:36.680] Checking service: payment-service",
        "[11:11:36.680] ✓ NotEmpty: Service name should not be empty",
        "[11:11:36.680] ✓ Contains: Service name should contain 'service'",
        "[11:11:36.680] Checking service: notification-service",
        "[11:11:36.680] ✓ NotEmpty: Service name should not be empty",
        "[11:11:36.680] ✓ Contains: Service name should contain 'service'",
        "[11:11:36.680] Checking service: analytics-service",
        "[11:11:36.680] ✓ NotEmpty: Service name should not be empty",
        "[11:11:36.680] ✓ Contains: Service name should contain 'service'",
        "[11:11:36.680] Step 4: Final integration validation",
        "[11:11:36.680] ✓ True: Integration score should be at least 90",
        "[11:11:36.680] Integration test completed successfully"
      ],
      "start_time": "2025-08-01T11:11:36.68053139+01:00",
      "end_time": "2025-08-01T11:11:36.68057354+01:00",
      "steps": [
        {
          "name": "True",
          "description": "Database should be connected",
          "status": 0,
          "duration": 40,
          "start_time": "2025-08-01T11:11:36.680532301+01:00",
          "end_time": "2025-08-01T11:11:36.680532332+01:00",
          "expected": true,
          "actual": true
        },
        {
          "name": "True",
          "description": "Cache hit rate should be above 80%",
          "status": 0,
          "duration": 30,
          "start_time": "2025-08-01T11:11:36.680533173+01:00",
          "end_time": "2025-08-01T11:11:36.680533203+01:00",
          "expected": true,
          "actual": true
        },
        {
          "name": "Len",
          "description": "Should have 3 external services",
          "status": 0,
          "duration": 2204,
          "start_time": "2025-08-01T11:11:36.680542471+01:00",
          "end_time": "2025-08-01T11:11:36.680544675+01:00",
          "expected": 3,
          "actual": 3
        },
        {
          "name": "NotEmpty",
          "description": "Service name should not be empty",
          "status": 0,
          "duration": 2194,
          "start_time": "2025-08-01T11:11:36.680548091+01:00",
          "end_time": "2025-08-01T11:11:36.680550276+01:00",
          "expected": "not empty",
          "actual": "payment-service"
        },
        {
          "name": "Contains",
          "description": "Service name should contain 'service'",
          "status": 0,
          "duration": 1132,
          "start_time": "2025-08-01T11:11:36.680555596+01:00",
          "end_time": "2025-08-01T11:11:36.680556738+01:00",
          "expected": "string containing 'service'",
          "actual": "payment-service"
        },
        {
          "name": "NotEmpty",
          "description": "Service name should not be empty",
          "status": 0,
          "duration": 300,
          "start_time": "2025-08-01T11:11:36.68056301+01:00",
          "end_time": "2025-08-01T11:11:36.68056332+01:00",
          "expected": "not empty",
          "actual": "notification-service"
        },
        {
          "name": "Contains",
          "description": "Service name should contain 'service'",
          "status": 0,
          "duration": 151,
          "start_time": "2025-08-01T11:11:36.680563871+01:00",
          "end_time": "2025-08-01T11:11:36.680564012+01:00",
          "expected": "string containing 'service'",
          "actual": "notification-service"
        },
        {
          "name": "NotEmpty",
          "description": "Service name should not be empty",
          "status": 0,
          "duration": 70,
          "start_time": "2025-08-01T11:11:36.680565014+01:00",
          "end_time": "2025-08-01T11:11:36.680565094+01:00",
          "expected": "not empty",
          "actual": "analytics-service"
        },
        {
          "name": "Contains",
          "description": "Service name should contain 'service'",
          "status": 0,
          "duration": 100,
          "start_time": "2025-08-01T11:11:36.680565505+01:00",
          "end_time": "2025-08-01T11:11:36.680565605+01:00",
          "expected": "string containing 'service'",
          "actual": "analytics-service"
        },
        {
          "name": "True",
          "description": "Integration score should be at least 90",
          "status": 0,
          "duration": 40,
          "start_time": "2025-08-01T11:11:36.680572889+01:00",
          "end_time": "2025-08-01T11:11:36.680572929+01:00",
          "expected": true,
          "actual": true
        }
      ]
    }
  ]
}